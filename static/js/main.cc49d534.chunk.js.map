{"version":3,"sources":["components/Details.js","components/Controls.js","components/Player.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerDetails","props","className","src","song","img_src","alt","title","artist","PlayerControls","onClick","SkipSong","class","setIsPlaying","isPlaying","Player","audioEl","useRef","useState","useEffect","current","play","pause","songs","currentSongIndex","ref","forwards","setCurrentSongIndex","temp","length","nextSongIndex","App","setNextSongIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc49d534.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction PlayerDetails(props) {\r\n  return (\r\n    <div className=\"c-player--details\">\r\n      <div className=\"details-img\">\r\n        <img src={props.song.img_src} alt=\"album art\" />\r\n      </div>\r\n      <h3 className=\"details-title\">{props.song.title}</h3>\r\n      <h4 className=\"details-artist\">{props.song.artist}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerDetails;\r\n","import React from \"react\";\r\n\r\nfunction PlayerControls(props) {\r\n  return (\r\n    <div className=\"c-player--controls\">\r\n      <button className=\"skip-btn\" onClick={() => props.SkipSong(false)}>\r\n        <i class=\"fas fa-backward\"></i>\r\n      </button>\r\n      <button\r\n        className=\"play-btn\"\r\n        onClick={() => props.setIsPlaying(!props.isPlaying)}\r\n      >\r\n        <i class={props.isPlaying ? \"fas fa-pause\" : \"fas fa-play\"}></i>\r\n      </button>\r\n      <button className=\"skip-btn\" onClick={() => props.SkipSong()}>\r\n        <i class=\"fas fa-forward\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerControls;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PlayerDetails from \"./Details\";\r\nimport PlayerControls from \"./Controls\";\r\n\r\nfunction Player(props) {\r\n  const audioEl = useRef(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      audioEl.current.play();\r\n    } else {\r\n      audioEl.current.pause();\r\n    }\r\n  });\r\n\r\n  const SkipSong = (forwards = true) => {\r\n    if (forwards) {\r\n      props.setCurrentSongIndex(() => {\r\n        let temp = props.currentSongIndex;\r\n        temp++;\r\n\r\n        if (temp > props.songs.length - 1) {\r\n          temp = 0;\r\n        }\r\n\r\n        return temp;\r\n      });\r\n    } else {\r\n      props.setCurrentSongIndex(() => {\r\n        let temp = props.currentSongIndex;\r\n        temp--;\r\n\r\n        if (temp < 0) {\r\n          temp = props.songs.length - 1;\r\n        }\r\n\r\n        return temp;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"c-player\">\r\n      <audio\r\n        src={props.songs[props.currentSongIndex].src}\r\n        ref={audioEl}\r\n      ></audio>\r\n      <h4>Now Playing...</h4>\r\n      <PlayerDetails song={props.songs[props.currentSongIndex]} />\r\n      <PlayerControls\r\n        isPlaying={isPlaying}\r\n        setIsPlaying={setIsPlaying}\r\n        SkipSong={SkipSong}\r\n      />\r\n      <p>\r\n        <strong>Next Track: </strong>\r\n        <div className=\"nextSong\">\r\n          {props.songs[props.nextSongIndex].title} <br />{\" \"}\r\n          {props.songs[props.nextSongIndex].artist}\r\n        </div>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useState, useEffect } from \"react\";\nimport Player from \"./components/Player\";\n\nfunction App() {\n  const [songs] = useState([\n    {\n      title: \"Death Of A Bachelor\",\n      artist: \"Panic! At The Disco\",\n      img_src: \"./images/song-1.jpg\",\n      src: \"./music/Death-of-a-Bachelor.mp3\",\n    },\n    {\n      title: \"Cake By The Ocean\",\n      artist: \"DNCE\",\n      img_src: \"./images/song-2.jpg\",\n      src: \"./music/Cake-By-The-Ocean.mp3\",\n    },\n    {\n      title: \"It Was Always You\",\n      artist: \"Maroon 5\",\n      img_src: \"./images/song-3.jpg\",\n      src: \"./music/It-Was-Always-You.mp3\",\n    },\n    {\n      title: \"Far Horizons\",\n      artist: \"Jeremy Soule\",\n      img_src: \"./images/song-4.jpg\",\n      src: \"./music/Far-Horizons.mp3\",\n    },\n  ]);\n\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [nextSongIndex, setNextSongIndex] = useState(currentSongIndex + 1);\n\n  useEffect(() => {\n    setNextSongIndex(() => {\n      if (currentSongIndex + 1 > songs.length - 1) {\n        return 0;\n      } else {\n        return currentSongIndex + 1;\n      }\n    });\n  }, [currentSongIndex]);\n\n  return (\n    <div className=\"App\">\n      <Player\n        currentSongIndex={currentSongIndex}\n        setCurrentSongIndex={setCurrentSongIndex}\n        nextSongIndex={nextSongIndex}\n        songs={songs}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}